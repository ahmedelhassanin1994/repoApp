// Mocks generated by Mockito 5.4.4 from annotations
// in mvvm_project/test/features/home/data/repository/repositoryHome_impl.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mvvm_project/core/common/data/model/model_cache.dart' as _i3;
import 'package:mvvm_project/core/common/network/network_info.dart' as _i7;
import 'package:mvvm_project/features/features_home/data/data_source/local_data_source.dart'
    as _i8;
import 'package:mvvm_project/features/features_home/data/data_source/remote_data_source_home.dart'
    as _i4;
import 'package:mvvm_project/features/features_home/data/responeses/model_repos.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeModel_Cache_1 extends _i1.SmartFake implements _i3.Model_Cache {
  _FakeModel_Cache_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSourceHome].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSourceHome extends _i1.Mock
    implements _i4.RemoteDataSourceHome {
  MockRemoteDataSourceHome() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.ModelRepos>> getRepos() => (super.noSuchMethod(
        Invocation.method(
          #getRepos,
          [],
        ),
        returnValue: _i5.Future<List<_i6.ModelRepos>>.value(<_i6.ModelRepos>[]),
      ) as _i5.Future<List<_i6.ModelRepos>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i8.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Box<dynamic>> Openbox() => (super.noSuchMethod(
        Invocation.method(
          #Openbox,
          [],
        ),
        returnValue: _i5.Future<_i2.Box<dynamic>>.value(_FakeBox_0<dynamic>(
          this,
          Invocation.method(
            #Openbox,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Box<dynamic>>);

  @override
  _i5.Future<_i3.Model_Cache> getCache() => (super.noSuchMethod(
        Invocation.method(
          #getCache,
          [],
        ),
        returnValue: _i5.Future<_i3.Model_Cache>.value(_FakeModel_Cache_1(
          this,
          Invocation.method(
            #getCache,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Model_Cache>);

  @override
  _i5.Future<void> AddCache(_i3.Model_Cache? modelcache) => (super.noSuchMethod(
        Invocation.method(
          #AddCache,
          [modelcache],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteLocal(dynamic tittle) => (super.noSuchMethod(
        Invocation.method(
          #deleteLocal,
          [tittle],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
